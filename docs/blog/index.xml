<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Alexandro Disla</title>
<link>https://ad0791.github.io/blog/</link>
<atom:link href="https://ad0791.github.io/blog/index.xml" rel="self" type="application/rss+xml"/>
<description>Statistics | Data Analyst | Backend Engineering</description>
<image>
<url>https://ad0791.github.io/img/ad0791_profile.jpeg</url>
<title>Alexandro Disla</title>
<link>https://ad0791.github.io/blog/</link>
</image>
<generator>quarto-1.4.555</generator>
<lastBuildDate>Sat, 19 Aug 2023 04:00:00 GMT</lastBuildDate>
<item>
  <title>Web Scraping</title>
  <dc:creator>Alexandro Disla</dc:creator>
  <link>https://ad0791.github.io/blog/posts/web_scraping.html</link>
  <description><![CDATA[ 




<section id="web-scraping-extracting-data-from-websites" class="level1">
<h1>Web scraping: Extracting Data from Websites</h1>
<p>Web scraping refers to techniques for collecting or extracting data from websites. It allows one to programmatically obtain large amounts of data that would be difficult or time-consuming to gather manually. It’s very interesting to see how you can leverage your data analytical skills in this process. Let’s see how everything will come together.</p>
<section id="why-web-scraping-is-useful" class="level2">
<h2 class="anchored" data-anchor-id="why-web-scraping-is-useful">Why Web Scraping is Useful</h2>
<p>Web scraping has many practical applications and uses. Here are some examples:</p>
<ul>
<li>Price monitoring - Track prices and price changes for products on e-commerce websites. This can help find deals or monitor trends.</li>
<li>Lead generation - Gather contact information like emails and phone numbers from directories or listings. This is useful for sales and marketing.</li>
<li>Research - Collect data from websites to perform analyses or conduct studies. Examples include gathering product reviews, compiling real estate listings, or analyzing social media trends.</li>
<li>Content aggregation - Build databases or summaries by scraping news sites, blogs, classifieds, and other sources to create curated content sites.</li>
<li>SEO monitoring - Check rankings and keyword positions for a site on search engines like Google. Helps optimize search marketing efforts.</li>
</ul>
</section>
<section id="how-web-scraping-works" class="level2">
<h2 class="anchored" data-anchor-id="how-web-scraping-works">How Web Scraping works</h2>
<p>Web scrapers access webpages programmatically and extract the desired information. Here is the general process:</p>
<ol type="1">
<li><p>Find the URL of the page to scrape.</p></li>
<li><p>Send an HTTP request to download the page content.</p></li>
<li><p>Parse through the HTML content to identify relevant data. Common approaches include:</p>
<ul>
<li><p>Pattern matching - Search for strings or regex patterns that identify data.</p></li>
<li><p>DOM parsing - Traverse the DOM (Document Object Model) tree to locate elements.</p></li>
<li><p>XPath queries - Write expressions to navigate through HTML structure and find data.</p></li>
</ul></li>
<li><p>Extract and store the data, often in a database or spreadsheet.</p></li>
<li><p>Repeat the process across many pages to gather larger data sets.</p></li>
</ol>
<p>Web scraping can be done through scripting languages like Python, libraries like BeautifulSoup, browser automation tools like Selenium, or fully integrated scraping solutions.</p>
<section id="key-considerations" class="level3">
<h3 class="anchored" data-anchor-id="key-considerations">Key Considerations</h3>
<p>There are a few key factors to keep in mind when web scraping:</p>
<ul>
<li><p>Avoid overloading websites with too many rapid requests, which can be seen as denial of service attacks. Add delays and throttles.</p></li>
<li><p>Check websites’ terms of use and robots.txt files to understand if they allow scraping. Some sites prohibit it.</p></li>
<li><p>Use caches, proxies, and rotation to distribute requests and avoid getting IP addresses blocked.</p></li>
<li><p>In some cases, explicitly identifying as a scraper through a user agent string can help avoid blocks.</p></li>
<li><p>Make sure to follow relevant laws and regulations regarding data collection and usage.</p></li>
</ul>
<p>In summary, web scraping is a versatile technique to automate the extraction of data from websites for various purposes. When done properly, it is an extremely useful tool for data collection and analysis.</p>
</section>
</section>
<section id="popular-python-web-scraping-frameworks" class="level2">
<h2 class="anchored" data-anchor-id="popular-python-web-scraping-frameworks">Popular Python Web Scraping Frameworks</h2>
<p>There are many Python libraries and frameworks that make web scraping easier. Some popular options include:</p>
<ul>
<li><p>BeautifulSoup - HTML/XML parsing library that helps navigate, search, and extract data from HTML. Excellent for basic scraping tasks.</p></li>
<li><p>Scrapy - Full framework for large scale web crawling and scraping. Can extract data very quickly and handle large volumes.</p></li>
<li><p>Selenium - Automates web browsers to programmatically load pages and extract data. Useful when sites have heavy JavaScript or are harder to scrape.</p></li>
<li><p>Requests - Simplifies making HTTP requests to access web pages. Good foundation for APIs and scraping.</p></li>
<li><p>lxml - Fast and feature-rich library for XML and HTML manipulation. Helps scrape complex sites.</p></li>
</ul>
<p>These libraries can be combined to create powerful scrapers. For example, using Requests and BeautifulSoup together is a common approach. Scrapy and Selenium also integrate with BeautifulSoup.</p>
</section>
<section id="analyzing-stack-overflow-question-data" class="level2">
<h2 class="anchored" data-anchor-id="analyzing-stack-overflow-question-data">Analyzing Stack Overflow Question Data</h2>
<p>Stack Overflow is one of the largest online communities for software developers to ask and answer programming questions. The site contains a wealth of data that can be analyzed to uncover interesting insights.</p>
<p>In this article, we will scrape a sample of recent Stack Overflow questions using Python and BeautifulSoup. We will then load the data into a Pandas DataFrame to analyze question statistics like views, answers, votes, etc.</p>
<section id="scraping-stack-overflow-questions-with-bs4" class="level3">
<h3 class="anchored" data-anchor-id="scraping-stack-overflow-questions-with-bs4">Scraping Stack Overflow Questions with BS4</h3>
<p>We can use the BeautifulSoup library in Python to parse the HTML of the Stack Overflow homepage and extract the question data.</p>
<ol type="1">
<li>The first step of course is load the libraries in order to get the required objects.</li>
</ol>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> requests <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> get</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> bs4 <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> BeautifulSoup, ResultSet</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DataFrame</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List,Dict, Any</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> plotly.express <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> px</span></code></pre></div>
</div>
<ol start="2" type="1">
<li>In the second stage we use the <code>get</code> method from <code>requests</code> to get the response object. The <code>BeautifulSoup</code> class with the specific parser will allow us to parse the content to readable html. The key point is the <code>select</code> method that will pick all the tags with the specific css class. And just like that we get all the questions in our variable. Now we must handle the block further to get the data in a friendly python dictionary.</li>
</ol>
<div class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://stackoverflow.com/questions"</span></span>
<span id="cb2-2">response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get(url)</span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check if the request was successful</span></span>
<span id="cb2-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> response.status_code <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>:</span>
<span id="cb2-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Failed to retrieve the page. Status code: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>response<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>status_code<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb2-7">    exit()</span>
<span id="cb2-8"></span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the html.parser allows up to parse the content</span></span>
<span id="cb2-10">soup <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> BeautifulSoup(response.content, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"html.parser"</span>)</span>
<span id="cb2-11"></span>
<span id="cb2-12"></span>
<span id="cb2-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Just in case you need the html file</span></span>
<span id="cb2-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">""" with open("stackoverflow_data.html",'wb') as file:</span></span>
<span id="cb2-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    file.write(</span></span>
<span id="cb2-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        soup.find('div',id="mainbar").find('div',class_="flush-left").prettify("utf-8")</span></span>
<span id="cb2-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    ) """</span></span>
<span id="cb2-18"></span>
<span id="cb2-19">questions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> soup.select(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.s-post-summary.js-post-summary'</span>)</span></code></pre></div>
</div>
<ol start="3" type="1">
<li>This handler will allow to turn the questions in to a dictionary. The loop statement will allow us to make the selection of the titles, votes, answers, users and the views.</li>
</ol>
<div class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> questions_handler(questions: ResultSet):</span>
<span id="cb3-2">    data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{</span>
<span id="cb3-3">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'title'</span>: [],</span>
<span id="cb3-4">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'user'</span>: [],</span>
<span id="cb3-5">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'vote_count'</span>: [],</span>
<span id="cb3-6">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'answer_count'</span>: [],</span>
<span id="cb3-7">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'view_count'</span>: []</span>
<span id="cb3-8">    }</span>
<span id="cb3-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> question <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> questions:</span>
<span id="cb3-10">        title <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> question.select_one(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.s-link'</span>).getText()</span>
<span id="cb3-11">        user <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> question.select_one(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.s-user-card--link a'</span>).getText()</span>
<span id="cb3-12">        vote_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> question.select_one(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.s-post-summary--stats-item__emphasized'</span>).getText()</span>
<span id="cb3-13">        answer_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> question.select_one(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.s-post-summary--stats-item:nth-child(2)'</span>).getText()</span>
<span id="cb3-14">        view_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> question.select_one(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.s-post-summary--stats-item:nth-child(3)'</span>).getText()</span>
<span id="cb3-15">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> title:</span>
<span id="cb3-16">            data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>].append(title)</span>
<span id="cb3-17">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> user:</span>
<span id="cb3-18">            data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>].append(user)</span>
<span id="cb3-19">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> vote_count:</span>
<span id="cb3-20">            data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vote_count"</span>].append(vote_count)</span>
<span id="cb3-21">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> answer_count:</span>
<span id="cb3-22">            data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"answer_count"</span>].append(answer_count)</span>
<span id="cb3-23">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> view_count:</span>
<span id="cb3-24">            data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"view_count"</span>].append(view_count)</span>
<span id="cb3-25">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> data</span></code></pre></div>
</div>
<ol start="4" type="1">
<li>Now we bring the<code>DataFrame</code> class that wiill allow us to turn the python dict into a basic dataframe. Now we will be able to manipulate the data at will. This will lead to the data cleansing phase. This function is capable of detecting any issue withing the scraping process. The user will see a Dataframe regardless.</li>
</ol>
<div class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> build_dataframe(questions_set: ResultSet):</span>
<span id="cb4-2">    data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> questions_handler(questions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>questions_set)</span>
<span id="cb4-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>]:</span>
<span id="cb4-4">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> DataFrame({</span>
<span id="cb4-5">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"message"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The Stackoverflow page has been changed"</span>],</span>
<span id="cb4-6">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"action"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"correct the scraper"</span>]</span>
<span id="cb4-7">        })</span>
<span id="cb4-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> DataFrame({</span>
<span id="cb4-9">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"titles"</span>: data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span>],</span>
<span id="cb4-10">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"users"</span>: data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"user"</span>],</span>
<span id="cb4-11">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vote_counts"</span>: data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vote_count"</span>],</span>
<span id="cb4-12">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"answer_counts"</span>: data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"answer_count"</span>],</span>
<span id="cb4-13">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"view_counts"</span>: data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"view_count"</span>],</span>
<span id="cb4-14">    })</span></code></pre></div>
</div>
<ol start="4" type="1">
<li>We build the dataframe with the handler.</li>
</ol>
<div class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">questions_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> build_dataframe(questions)</span>
<span id="cb5-2">questions_df.head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="5">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">titles</th>
<th data-quarto-table-cell-role="th">users</th>
<th data-quarto-table-cell-role="th">vote_counts</th>
<th data-quarto-table-cell-role="th">answer_counts</th>
<th data-quarto-table-cell-role="th">view_counts</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>add attrs to a relationship model field on dja...</td>
<td>Reginaldo Uset Padron</td>
<td>\n0\nvotes\n</td>
<td>\n0\nanswers\n</td>
<td>\n2\nviews\n</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<section id="eda" class="level4">
<h4 class="anchored" data-anchor-id="eda">EDA</h4>
<ol start="5" type="1">
<li>remove the newline who is messing with the counts strings</li>
</ol>
<div class="cell" data-execution_count="6">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">questions_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'vote_counts'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> questions_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'vote_counts'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span>)</span>
<span id="cb6-2">questions_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'answer_counts'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> questions_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'answer_counts'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span>)</span>
<span id="cb6-3">questions_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'view_counts'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> questions_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'view_counts'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span>)</span>
<span id="cb6-4"></span>
<span id="cb6-5">questions_df.head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="6">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">titles</th>
<th data-quarto-table-cell-role="th">users</th>
<th data-quarto-table-cell-role="th">vote_counts</th>
<th data-quarto-table-cell-role="th">answer_counts</th>
<th data-quarto-table-cell-role="th">view_counts</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>add attrs to a relationship model field on dja...</td>
<td>Reginaldo Uset Padron</td>
<td>0 votes</td>
<td>0 answers</td>
<td>2 views</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<ol start="6" type="1">
<li>Extract the views, answers and the votes</li>
</ol>
<div class="cell" data-execution_count="7">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">questions_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'vote_counts'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> questions_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'vote_counts'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.extract(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'(\d+)'</span>).astype(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>)</span>
<span id="cb7-2">questions_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'answer_counts'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> questions_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'answer_counts'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.extract(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'(\d+)'</span>).astype(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>)</span>
<span id="cb7-3">questions_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'view_counts'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> questions_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'view_counts'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.extract(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'(\d+)'</span>).astype(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>)</span>
<span id="cb7-4">questions_df.rename(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{</span>
<span id="cb7-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vote_counts"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"votes"</span>,</span>
<span id="cb7-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"answer_counts"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"answers"</span>,</span>
<span id="cb7-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"view_counts"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"views"</span></span>
<span id="cb7-8">},</span>
<span id="cb7-9">inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb7-10">)</span>
<span id="cb7-11">questions_df.head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="7">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">titles</th>
<th data-quarto-table-cell-role="th">users</th>
<th data-quarto-table-cell-role="th">votes</th>
<th data-quarto-table-cell-role="th">answers</th>
<th data-quarto-table-cell-role="th">views</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">0</td>
<td>add attrs to a relationship model field on dja...</td>
<td>Reginaldo Uset Padron</td>
<td>0</td>
<td>0</td>
<td>2</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">1</td>
<td>Kube-OVN configuration on OpenStack</td>
<td>Vladouse</td>
<td>0</td>
<td>0</td>
<td>2</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">2</td>
<td>Design suggestion for a reporting component</td>
<td>eshwar</td>
<td>0</td>
<td>0</td>
<td>2</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">3</td>
<td>Angular - unable to unsubscribe from valueChan...</td>
<td>apex2022</td>
<td>0</td>
<td>0</td>
<td>6</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">4</td>
<td>Load filter from path with deepar_flutter</td>
<td>Ivan David</td>
<td>0</td>
<td>0</td>
<td>4</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<ol start="7" type="1">
<li>We can choose to save it to excel format, produce plots or pivot_tables.</li>
</ol>
</section>
<section id="barplots" class="level4">
<h4 class="anchored" data-anchor-id="barplots">Barplots</h4>
<p>The views by Users:</p>
<div class="cell" data-execution_count="8">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">px.bar(questions_df, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"views"</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"users"</span>, text_auto<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>                            <div id="87e37deb-3556-4602-9b3c-83bed11adaf8" class="plotly-graph-div" style="height:525px; width:100%;"></div>            <script type="text/javascript">                require(["plotly"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("87e37deb-3556-4602-9b3c-83bed11adaf8")) {                    Plotly.newPlot(                        "87e37deb-3556-4602-9b3c-83bed11adaf8",                        [{"alignmentgroup":"True","hovertemplate":"views=%{x}<br>users=%{y}<extra></extra>","legendgroup":"","marker":{"color":"#636efa","pattern":{"shape":""}},"name":"","offsetgroup":"","orientation":"h","showlegend":false,"textposition":"auto","texttemplate":"%{x}","x":[2,2,2,6,4,5,3,6,6,3,3,6,5,5,5,7,9,5,7,5,13,5,4,9,3,8,3,15,5,3,2,6,9,5,4,8,5,8,7,10,32,6,4,6,5,4,13,22,9,5],"xaxis":"x","y":["Reginaldo Uset Padron","Vladouse","eshwar","apex2022","Ivan David","Roelof Berkepeis","Inder Singh","Dosado","Abdulrahman Youssef","Christine Brydges","David Thielen","neksodebe","Josh.K","Damian Kowalski","The_Matrix","negativeattitude","Electrious_46","Netanel","G. Bittencourt","Branden Jones","CrazyCodingCranberry","Hamza Bilal","sapo_cosmico","ansh87","Ishan Popatia","Sertac TULLUK","Tyler Seppala","user1998863","petesing","Alessandra","Amirhussein","wforl","Danilo","BDav25","devblock","ZorTik","Learn on hard way","Yehia Gamal","Anand Kannan","Yurizinhokkjkjk","AKD2022","SorryBaby","DARSIN","Husamuldeen Abdlrahman","Piotr Sygnatowicz","Louis.vgn","Kachi","Ronaldo","Yannik Br\u00fcggemann","PilotPatel1"],"yaxis":"y","type":"bar"}],                        {"template":{"data":{"histogram2dcontour":[{"type":"histogram2dcontour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"choropleth":[{"type":"choropleth","colorbar":{"outlinewidth":0,"ticks":""}}],"histogram2d":[{"type":"histogram2d","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmap":[{"type":"heatmap","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmapgl":[{"type":"heatmapgl","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"contourcarpet":[{"type":"contourcarpet","colorbar":{"outlinewidth":0,"ticks":""}}],"contour":[{"type":"contour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"surface":[{"type":"surface","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"mesh3d":[{"type":"mesh3d","colorbar":{"outlinewidth":0,"ticks":""}}],"scatter":[{"fillpattern":{"fillmode":"overlay","size":10,"solidity":0.2},"type":"scatter"}],"parcoords":[{"type":"parcoords","line":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolargl":[{"type":"scatterpolargl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"scattergeo":[{"type":"scattergeo","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolar":[{"type":"scatterpolar","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"scattergl":[{"type":"scattergl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatter3d":[{"type":"scatter3d","line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattermapbox":[{"type":"scattermapbox","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterternary":[{"type":"scatterternary","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattercarpet":[{"type":"scattercarpet","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"pie":[{"automargin":true,"type":"pie"}]},"layout":{"autotypenumbers":"strict","colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"hovermode":"closest","hoverlabel":{"align":"left"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"bgcolor":"#E5ECF6","angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"ternary":{"bgcolor":"#E5ECF6","aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]]},"xaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"yaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"geo":{"bgcolor":"white","landcolor":"#E5ECF6","subunitcolor":"white","showland":true,"showlakes":true,"lakecolor":"white"},"title":{"x":0.05},"mapbox":{"style":"light"}}},"xaxis":{"anchor":"y","domain":[0.0,1.0],"title":{"text":"views"}},"yaxis":{"anchor":"x","domain":[0.0,1.0],"title":{"text":"users"}},"legend":{"tracegroupgap":0},"margin":{"t":60},"barmode":"relative"},                        {"responsive": true}                    ).then(function(){
                            
var gd = document.getElementById('87e37deb-3556-4602-9b3c-83bed11adaf8');
var x = new MutationObserver(function (mutations, observer) {{
        var display = window.getComputedStyle(gd).display;
        if (!display || display === 'none') {{
            console.log([gd, 'removed!']);
            Plotly.purge(gd);
            observer.disconnect();
        }}
}});

// Listen for the removal of the full notebook cells
var notebookContainer = gd.closest('#notebook-container');
if (notebookContainer) {{
    x.observe(notebookContainer, {childList: true});
}}

// Listen for the clearing of the current output cell
var outputEl = gd.closest('.output');
if (outputEl) {{
    x.observe(outputEl, {childList: true});
}}

                        })                };                });            </script>        </div>
</div>
</div>
<p>The answers by Users:</p>
<div class="cell" data-execution_count="9">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">px.bar(questions_df, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"answers"</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"users"</span>, text_auto<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>                            <div id="efac464b-39f8-4a77-8106-a0df4ffe4df4" class="plotly-graph-div" style="height:525px; width:100%;"></div>            <script type="text/javascript">                require(["plotly"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("efac464b-39f8-4a77-8106-a0df4ffe4df4")) {                    Plotly.newPlot(                        "efac464b-39f8-4a77-8106-a0df4ffe4df4",                        [{"alignmentgroup":"True","hovertemplate":"answers=%{x}<br>users=%{y}<extra></extra>","legendgroup":"","marker":{"color":"#636efa","pattern":{"shape":""}},"name":"","offsetgroup":"","orientation":"h","showlegend":false,"textposition":"auto","texttemplate":"%{x}","x":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0],"xaxis":"x","y":["Reginaldo Uset Padron","Vladouse","eshwar","apex2022","Ivan David","Roelof Berkepeis","Inder Singh","Dosado","Abdulrahman Youssef","Christine Brydges","David Thielen","neksodebe","Josh.K","Damian Kowalski","The_Matrix","negativeattitude","Electrious_46","Netanel","G. Bittencourt","Branden Jones","CrazyCodingCranberry","Hamza Bilal","sapo_cosmico","ansh87","Ishan Popatia","Sertac TULLUK","Tyler Seppala","user1998863","petesing","Alessandra","Amirhussein","wforl","Danilo","BDav25","devblock","ZorTik","Learn on hard way","Yehia Gamal","Anand Kannan","Yurizinhokkjkjk","AKD2022","SorryBaby","DARSIN","Husamuldeen Abdlrahman","Piotr Sygnatowicz","Louis.vgn","Kachi","Ronaldo","Yannik Br\u00fcggemann","PilotPatel1"],"yaxis":"y","type":"bar"}],                        {"template":{"data":{"histogram2dcontour":[{"type":"histogram2dcontour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"choropleth":[{"type":"choropleth","colorbar":{"outlinewidth":0,"ticks":""}}],"histogram2d":[{"type":"histogram2d","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmap":[{"type":"heatmap","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmapgl":[{"type":"heatmapgl","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"contourcarpet":[{"type":"contourcarpet","colorbar":{"outlinewidth":0,"ticks":""}}],"contour":[{"type":"contour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"surface":[{"type":"surface","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"mesh3d":[{"type":"mesh3d","colorbar":{"outlinewidth":0,"ticks":""}}],"scatter":[{"fillpattern":{"fillmode":"overlay","size":10,"solidity":0.2},"type":"scatter"}],"parcoords":[{"type":"parcoords","line":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolargl":[{"type":"scatterpolargl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"scattergeo":[{"type":"scattergeo","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolar":[{"type":"scatterpolar","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"scattergl":[{"type":"scattergl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatter3d":[{"type":"scatter3d","line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattermapbox":[{"type":"scattermapbox","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterternary":[{"type":"scatterternary","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattercarpet":[{"type":"scattercarpet","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"pie":[{"automargin":true,"type":"pie"}]},"layout":{"autotypenumbers":"strict","colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"hovermode":"closest","hoverlabel":{"align":"left"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"bgcolor":"#E5ECF6","angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"ternary":{"bgcolor":"#E5ECF6","aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]]},"xaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"yaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"geo":{"bgcolor":"white","landcolor":"#E5ECF6","subunitcolor":"white","showland":true,"showlakes":true,"lakecolor":"white"},"title":{"x":0.05},"mapbox":{"style":"light"}}},"xaxis":{"anchor":"y","domain":[0.0,1.0],"title":{"text":"answers"}},"yaxis":{"anchor":"x","domain":[0.0,1.0],"title":{"text":"users"}},"legend":{"tracegroupgap":0},"margin":{"t":60},"barmode":"relative"},                        {"responsive": true}                    ).then(function(){
                            
var gd = document.getElementById('efac464b-39f8-4a77-8106-a0df4ffe4df4');
var x = new MutationObserver(function (mutations, observer) {{
        var display = window.getComputedStyle(gd).display;
        if (!display || display === 'none') {{
            console.log([gd, 'removed!']);
            Plotly.purge(gd);
            observer.disconnect();
        }}
}});

// Listen for the removal of the full notebook cells
var notebookContainer = gd.closest('#notebook-container');
if (notebookContainer) {{
    x.observe(notebookContainer, {childList: true});
}}

// Listen for the clearing of the current output cell
var outputEl = gd.closest('.output');
if (outputEl) {{
    x.observe(outputEl, {childList: true});
}}

                        })                };                });            </script>        </div>
</div>
</div>
<p>The votes by Users:</p>
<div class="cell" data-execution_count="10">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">px.bar(questions_df, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"votes"</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"users"</span>, text_auto<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div>                            <div id="f0b12cac-3f0b-4cb4-89e6-9f27f4d5e9fb" class="plotly-graph-div" style="height:525px; width:100%;"></div>            <script type="text/javascript">                require(["plotly"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("f0b12cac-3f0b-4cb4-89e6-9f27f4d5e9fb")) {                    Plotly.newPlot(                        "f0b12cac-3f0b-4cb4-89e6-9f27f4d5e9fb",                        [{"alignmentgroup":"True","hovertemplate":"votes=%{x}<br>users=%{y}<extra></extra>","legendgroup":"","marker":{"color":"#636efa","pattern":{"shape":""}},"name":"","offsetgroup":"","orientation":"h","showlegend":false,"textposition":"auto","texttemplate":"%{x}","x":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,0,2,0,0,0,0,0,0,2,0,0,0,2,1,0,0,0,0,2,1,4,3,0,0,0,0,1,1,3,0,0],"xaxis":"x","y":["Reginaldo Uset Padron","Vladouse","eshwar","apex2022","Ivan David","Roelof Berkepeis","Inder Singh","Dosado","Abdulrahman Youssef","Christine Brydges","David Thielen","neksodebe","Josh.K","Damian Kowalski","The_Matrix","negativeattitude","Electrious_46","Netanel","G. Bittencourt","Branden Jones","CrazyCodingCranberry","Hamza Bilal","sapo_cosmico","ansh87","Ishan Popatia","Sertac TULLUK","Tyler Seppala","user1998863","petesing","Alessandra","Amirhussein","wforl","Danilo","BDav25","devblock","ZorTik","Learn on hard way","Yehia Gamal","Anand Kannan","Yurizinhokkjkjk","AKD2022","SorryBaby","DARSIN","Husamuldeen Abdlrahman","Piotr Sygnatowicz","Louis.vgn","Kachi","Ronaldo","Yannik Br\u00fcggemann","PilotPatel1"],"yaxis":"y","type":"bar"}],                        {"template":{"data":{"histogram2dcontour":[{"type":"histogram2dcontour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"choropleth":[{"type":"choropleth","colorbar":{"outlinewidth":0,"ticks":""}}],"histogram2d":[{"type":"histogram2d","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmap":[{"type":"heatmap","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmapgl":[{"type":"heatmapgl","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"contourcarpet":[{"type":"contourcarpet","colorbar":{"outlinewidth":0,"ticks":""}}],"contour":[{"type":"contour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"surface":[{"type":"surface","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"mesh3d":[{"type":"mesh3d","colorbar":{"outlinewidth":0,"ticks":""}}],"scatter":[{"fillpattern":{"fillmode":"overlay","size":10,"solidity":0.2},"type":"scatter"}],"parcoords":[{"type":"parcoords","line":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolargl":[{"type":"scatterpolargl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"scattergeo":[{"type":"scattergeo","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolar":[{"type":"scatterpolar","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"scattergl":[{"type":"scattergl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatter3d":[{"type":"scatter3d","line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattermapbox":[{"type":"scattermapbox","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterternary":[{"type":"scatterternary","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattercarpet":[{"type":"scattercarpet","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"pie":[{"automargin":true,"type":"pie"}]},"layout":{"autotypenumbers":"strict","colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"hovermode":"closest","hoverlabel":{"align":"left"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"bgcolor":"#E5ECF6","angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"ternary":{"bgcolor":"#E5ECF6","aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]]},"xaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"yaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"geo":{"bgcolor":"white","landcolor":"#E5ECF6","subunitcolor":"white","showland":true,"showlakes":true,"lakecolor":"white"},"title":{"x":0.05},"mapbox":{"style":"light"}}},"xaxis":{"anchor":"y","domain":[0.0,1.0],"title":{"text":"votes"}},"yaxis":{"anchor":"x","domain":[0.0,1.0],"title":{"text":"users"}},"legend":{"tracegroupgap":0},"margin":{"t":60},"barmode":"relative"},                        {"responsive": true}                    ).then(function(){
                            
var gd = document.getElementById('f0b12cac-3f0b-4cb4-89e6-9f27f4d5e9fb');
var x = new MutationObserver(function (mutations, observer) {{
        var display = window.getComputedStyle(gd).display;
        if (!display || display === 'none') {{
            console.log([gd, 'removed!']);
            Plotly.purge(gd);
            observer.disconnect();
        }}
}});

// Listen for the removal of the full notebook cells
var notebookContainer = gd.closest('#notebook-container');
if (notebookContainer) {{
    x.observe(notebookContainer, {childList: true});
}}

// Listen for the clearing of the current output cell
var outputEl = gd.closest('.output');
if (outputEl) {{
    x.observe(outputEl, {childList: true});
}}

                        })                };                });            </script>        </div>
</div>
</div>
</section>
<section id="pivot-table" class="level4">
<h4 class="anchored" data-anchor-id="pivot-table">Pivot Table</h4>
<div class="cell" data-execution_count="11">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">questions_df.pivot_table(</span>
<span id="cb11-2">    values<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"views"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"answers"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"votes"</span>],</span>
<span id="cb11-3">    index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'users'</span>,</span>
<span id="cb11-4">    aggfunc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sum'</span>,</span>
<span id="cb11-5">    fill_value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb11-6">    margins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb11-7">    margins_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Total"</span></span>
<span id="cb11-8">)</span></code></pre></div>
<div class="cell-output cell-output-display" data-execution_count="11">
<div>


<table class="dataframe caption-top table table-sm table-striped small" data-quarto-postprocess="true" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th">answers</th>
<th data-quarto-table-cell-role="th">views</th>
<th data-quarto-table-cell-role="th">votes</th>
</tr>
<tr class="odd">
<th data-quarto-table-cell-role="th">users</th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
<th data-quarto-table-cell-role="th"></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td data-quarto-table-cell-role="th">AKD2022</td>
<td>1</td>
<td>32</td>
<td>3</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Abdulrahman Youssef</td>
<td>0</td>
<td>6</td>
<td>0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Alessandra</td>
<td>0</td>
<td>3</td>
<td>0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Amirhussein</td>
<td>0</td>
<td>2</td>
<td>0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Anand Kannan</td>
<td>0</td>
<td>7</td>
<td>1</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">BDav25</td>
<td>0</td>
<td>5</td>
<td>0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Branden Jones</td>
<td>1</td>
<td>5</td>
<td>0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Christine Brydges</td>
<td>0</td>
<td>3</td>
<td>0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">CrazyCodingCranberry</td>
<td>0</td>
<td>13</td>
<td>2</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">DARSIN</td>
<td>0</td>
<td>4</td>
<td>0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Damian Kowalski</td>
<td>0</td>
<td>5</td>
<td>0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Danilo</td>
<td>0</td>
<td>9</td>
<td>1</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">David Thielen</td>
<td>0</td>
<td>3</td>
<td>0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Dosado</td>
<td>0</td>
<td>6</td>
<td>0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Electrious_46</td>
<td>1</td>
<td>9</td>
<td>2</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">G. Bittencourt</td>
<td>0</td>
<td>7</td>
<td>0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Hamza Bilal</td>
<td>0</td>
<td>5</td>
<td>0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Husamuldeen Abdlrahman</td>
<td>0</td>
<td>6</td>
<td>0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Inder Singh</td>
<td>0</td>
<td>3</td>
<td>0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Ishan Popatia</td>
<td>0</td>
<td>3</td>
<td>0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Ivan David</td>
<td>0</td>
<td>4</td>
<td>0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Josh.K</td>
<td>0</td>
<td>5</td>
<td>0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Kachi</td>
<td>0</td>
<td>13</td>
<td>1</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Learn on hard way</td>
<td>0</td>
<td>5</td>
<td>0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Louis.vgn</td>
<td>0</td>
<td>4</td>
<td>1</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Netanel</td>
<td>0</td>
<td>5</td>
<td>0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">PilotPatel1</td>
<td>0</td>
<td>5</td>
<td>0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Piotr Sygnatowicz</td>
<td>0</td>
<td>5</td>
<td>0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Reginaldo Uset Padron</td>
<td>0</td>
<td>2</td>
<td>0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Roelof Berkepeis</td>
<td>0</td>
<td>5</td>
<td>0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Ronaldo</td>
<td>0</td>
<td>22</td>
<td>3</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Sertac TULLUK</td>
<td>0</td>
<td>8</td>
<td>0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">SorryBaby</td>
<td>0</td>
<td>6</td>
<td>0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">The_Matrix</td>
<td>0</td>
<td>5</td>
<td>0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Tyler Seppala</td>
<td>0</td>
<td>3</td>
<td>0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Vladouse</td>
<td>0</td>
<td>2</td>
<td>0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Yannik Brüggemann</td>
<td>1</td>
<td>9</td>
<td>0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">Yehia Gamal</td>
<td>0</td>
<td>8</td>
<td>2</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Yurizinhokkjkjk</td>
<td>0</td>
<td>10</td>
<td>4</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">ZorTik</td>
<td>0</td>
<td>8</td>
<td>0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">ansh87</td>
<td>0</td>
<td>9</td>
<td>0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">apex2022</td>
<td>0</td>
<td>6</td>
<td>0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">devblock</td>
<td>0</td>
<td>4</td>
<td>0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">eshwar</td>
<td>0</td>
<td>2</td>
<td>0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">negativeattitude</td>
<td>0</td>
<td>7</td>
<td>1</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">neksodebe</td>
<td>0</td>
<td>6</td>
<td>0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">petesing</td>
<td>0</td>
<td>5</td>
<td>0</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">sapo_cosmico</td>
<td>1</td>
<td>4</td>
<td>0</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">user1998863</td>
<td>0</td>
<td>15</td>
<td>2</td>
</tr>
<tr class="even">
<td data-quarto-table-cell-role="th">wforl</td>
<td>0</td>
<td>6</td>
<td>2</td>
</tr>
<tr class="odd">
<td data-quarto-table-cell-role="th">Total</td>
<td>5</td>
<td>334</td>
<td>25</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>


</section>
</section>
</section>
</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a> ]]></description>
  <category>Python</category>
  <category>Web scraping</category>
  <guid>https://ad0791.github.io/blog/posts/web_scraping.html</guid>
  <pubDate>Sat, 19 Aug 2023 04:00:00 GMT</pubDate>
  <media:content url="https://ad0791.github.io/img/web_scraping.jpeg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
